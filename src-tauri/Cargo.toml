[package]
name = "flightcore"
version = "2.17.0"
description = "Mod-manager for Northstar"
authors = ["https://github.com/R2NorthstarTools/FlightCore/graphs/contributors"]
license = "MIT"
repository = "https://github.com/R2NorthstarTools/FlightCore"
default-run = "flightcore"
edition = "2021"
rust-version = "1.66"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[profile.release]
# Keeps line tables in built binary
# c.f.: https://doc.rust-lang.org/cargo/reference/profiles.html#debug
# This is done to see line numbers in stack trace on sentry.io
debug = 1

[build-dependencies]
tauri-build = { version = "1.5", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.5", features = ["api-all", "dialog", "updater"] }
tokio = { version = "1", features = ["full"] }
# Sentry (crash) logging
sentry = "0.32"
sentry-log = "0.32"
# Find steam games
steamlocate = "1.2"
# Error messages
anyhow = "1.0"
# libthermite for Northstar/mod install handling
libthermite = { version = "0.7.0", features = ["proton"] }
# zip stuff
zip = "0.6.2"
# Regex
regex = "1.10"
# Read out running application process names
sysinfo = "0.29.11"
# HTTP requests
reqwest = { version = "0.11", features = ["blocking"] }
# Persistent store for settings
tauri-plugin-store = { git = "https://github.com/tauri-apps/plugins-workspace", rev = "5a6abd3203dc94c38f96d0c4bf7ecbef399f8c25" }
# JSON5 parsing support (allows comments in JSON)
json5 = "0.4.1"
# Async recursion for recursive mod install
async-recursion = "1.0.5"
# For parsing timestamps
chrono = "0.4.31"
# TypeScript bindings
ts-rs = "7.0"
# const formatting
const_format = "0.2.32"
# Logging libraries
pretty_env_logger = "0.5.0"
log = "0.4"
# Extracting zip files easily
zip-extract = "0.1.2"
# open urls
open = "5.0.1"
semver = "1.0"
# simplified filesystem access
glob = "0.3.1"
dirs = "5"

[target.'cfg(windows)'.dependencies]
# Windows API stuff
winapi = "0.3.9"
winreg = "0.52.0"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]
